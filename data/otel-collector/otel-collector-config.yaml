extensions:
  health_check:
# A receiver is how data gets into the OpenTelemetry Collector
receivers:
  # Set Prometheus Receiver to collects metrics from targets
  # Itâ€™s supports the full set of Prometheus configuration  
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 30s
          static_configs: 
            # The target 'RevDeBug-Server:9100' corresponds to a node_exporter monitoring the VM hosting the Docker Compose for RevDeBug.
            # Additional VMs can be added by appending their addresses to this list, following the format:
            # - targets: [ 'RevDeBug-Server:9100', 'vm.address1:9100', 'vm.address2:9100' ]
            - targets: [ 'RevDeBug-Server:9100' ]
processors:
  batch:
# An exporter is how data gets sent to different systems/back-ends
exporters:
  # Exports metrics via gRPC using OpenCensus format
  opencensus:
    endpoint: "apm-oap:11800" # The OAP Server address
    insecure: true
  logging:
    logLevel: error
service:
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [batch]
      exporters: [logging, opencensus]

  extensions: [health_check]